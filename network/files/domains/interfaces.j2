# Interfaces for domain {{ '%02d' | format(domain.domain_id) }}

{% set ifname_br = salt['domain_networking.generate_ifname'](domain, 'br') -%}
# {{ ifname_br }}
auto {{ ifname_br }}
iface {{ ifname_br }} inet manual
	pre-up ip link add name $IFACE type bridge
	pre-up ip link set address {{ salt['domain_networking.generate_mac']('br', domain, salt['pillar.get']('gwbatid')) }} dev $IFACE
	pre-up ip link set up dev $IFACE

	post-down ip link delete dev $IFACE

{% for network in domain.get('ipv4', {}).values() if 'address' in network %}
iface {{ ifname_br }} inet static
	address {{ network['address'] }}
	netmask {{ network['netmask'] }}
{%- endfor %}

{%- for network in domain.get('ipv6', {}).values() if 'address' in network %}
iface {{ ifname_br }} inet6 static
	address {{ network['address'] }}
	netmask {{ network['prefixlen'] }}
	dad-attempts 0
{%- endfor %}

{% set ifname_bat = salt['domain_networking.generate_ifname'](domain, 'bat') %}
# {{ ifname_bat }}
auto {{ ifname_bat }}
iface {{ ifname_bat }} inet manual
	pre-up ip link add name $IFACE type batadv
	pre-up ip link set address {{ salt['domain_networking.generate_mac']('bat', domain, salt['pillar.get']('gwbatid')) }} dev $IFACE
	pre-up ip link set up dev $IFACE

	post-up ip link set master {{ ifname_br }} dev $IFACE
	post-up batctl -m {{ ifname_bat }} orig_interval 10000
	post-up batctl -m {{ ifname_bat }} gw_mode server 50000/50000

	post-down ip link delete dev $IFACE

{%- for fastd in domain.get('fastd', {}).get('instances', []) %}
{% set fastd_ifname = salt['domain_networking.generate_ifname'](domain, 'fd', fastd['name']) %}
{% set fastd_mac = salt['domain_networking.generate_mac'](domain, 'fastd', salt['pillar.get']('gwbatid'), loop.index0) -%}
allow-hotplug {{ fastd_ifname }}
iface {{ fastd_ifname }} inet manual
	pre-up ip link set address {{ fastd_mac }} dev $IFACE
	pre-up ip link set up dev $IFACE

	post-up ip link set master {{ ifname_bat }} dev $IFACE
{%- endfor %}