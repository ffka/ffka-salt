# Bird config that received the default prefix from the core gateways
# and announces its own addresses and prefixes to the core routers

protocol kernel {
    scan time 10;
    export all;
    device routes;
    kernel table 10;
    table as202329;
}

function is_default_bat() {
    return net ~ [ ::/0 ];
}

protocol direct {
    table as202329;

    {% for gre in salt['pillar.get']('network:gre_gateway_bat:tunnel') %}
    interface "tun-{{ gre.name }}";
    {% endfor %}
    {% for gre in salt['pillar.get']('network:gre_vzffnrmo:tunnel') %}
    interface "tun-{{ gre.name }}";
    {% endfor %}
    interface "br_*";
}

protocol static static_bat {
    table as202329;
    route 2001:678:6e3::/48 unreachable;
};

# OSPF for loopback connectivity between batman gateways
function is_self_vzffnrmo() {
    return net ~ [ {{ pillar.network.lo.ipv6.vzffnrmo }}/128 ];
}

function is_lo_vzffnrmo() {
    return net ~ [ {{ pillar.vzffnrmo.prefix_v6_bat }}{128,128} ];
}

protocol ospf gw_bat_igp {
    table as202329;
    export where is_self_vzffnrmo();
    import where is_lo_vzffnrmo();

    area 0.0.0.0 {
        {%- for gre in salt['pillar.get']('network:gre_gateway_bat:tunnel') %}
        interface "tun-{{gre.name}}";
        {%- endfor %}
    };
}


# Template that is used for all BGP sessions between the core routers and the batman gateways
template bgp core_uplink {
	table as202329;
    local as 202329;
    import where is_default_bat();
    import keep filtered;
    export where proto = "static_bat";
    next hop self;
};

{% for gre in salt['pillar.get']('network:gre_vzffnrmo:tunnel') %}
protocol bgp {{ gre.name }} from core_uplink {
    source address {{ gre.v6_address }};
    neighbor {{ gre.v6_bgp_neighbor }} as 202329;
};
{% endfor %}
