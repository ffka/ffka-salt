{%- set prefix = "AS" ~ peer['asn'] %}

{% for session_name, session in peer['sessions'].items() %}
protocol bgp {{ prefix }}_{{ session_name }} from ebgp_{{ session['family'] }} {
    {{ session['family'] }} {
        import keep filtered;
        import filter {
            ebgp_in_transit({{ peer['asn'] }}, {{ session['session_id'] }}, CI_SCOPE_VALUE_{{ session['scope'] | upper }});
            ebgp_in_weight("{{ peer['type'] }}", {{ session.get('parameters', {}).get('local_pref', 0) }});
            accept;
        };
        export filter {
            ebgp_out_transit();
            ebgp_out_weight({{ session.get('parameters', {}).get('prepend', 0) }});
            ebgp_out_community_cleanup();
            print "[{{ prefix }}_{{ session_name }}] announcing ", net, " with path ", bgp_path;
            accept;
        };
    };

    source address {{ session['source'] }};
    neighbor {{ session['neighbor'] }} as {{ peer['asn'] }};
};
{% endfor %}
