{%- set prefix = "AS" ~ peer['asn'] %}

function {{ prefix }}_in() {
    ebgp_in_transit({{ peer['asn'] }});
    ebgp_in_weight("{{ peer['type'] }}");
    accept;
}

filter {{ prefix }}_out {
    reject;
}

{% for session_name, session in peer['sessions'].items() %}
protocol bgp {{ prefix }}_{{ session_name }} from ebgp_{{ session['family'] }} {
    {{ session['family'] }} {
        import keep filtered;
        import filter {
            ebgp_in_tag_session_id({{ session['session_id'] }});
            ebgp_in_tag_scope(CI_SCOPE_VALUE_{{ session['scope'] | upper }});
            {{ prefix }}_in();
        };
        export filter {{ prefix }}_out;
    };

    source address {{ session['source'] }};
    neighbor {{ session['neighbor'] }} as {{ peer['asn'] }};
};
{% endfor %}
