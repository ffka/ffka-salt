{% for af, v in [["ipv4", 4], ["ipv6", 6]] %}
{% for name, info in salt['pillar.get']('routing:static_routes', {}).items() if af in info %}
{% set proto = name | lower %}

{% if "propagate" in info %}
table static_{{ proto }}_{{ af }}_tmp;

protocol pipe static_{{ proto }}_{{ af }}_pipe {
  ipv4 {
    table static_{{ proto }}_{{ af }}_tmp;
    export filter {
        if !(proto = "static_{{ proto }}_{{ af }}") then {
        	reject;
        }
        bgp_large_community.add((LOCAL_AS, CA_PROPAGATE, CA_PROPAGATE_VALUE_{{ info['propagate'] | upper }}));
        accept;
    };
    import none;
  };
}
{% endif %}

protocol static static_{{ proto }}_{{ af }} {
  {{ af }} {
	{% if "propagate" in info %}
	table static_{{ proto }}_{{ af }}_tmp;
	{% endif %}
  };

  {% for prefix in info.get(af, {}).get('prefixes', []) %}
  {%- if "interface" in info %}
  route {{ prefix }} via "{{ info['interface'] }}";
  {%- elif "nexthop" in info %}
  route {{ prefix }} via "{{ info['nexthop'] }}";
  {% else %}
  route {{ prefix }} unreachable;
  {% endif %}
  {% endfor %}
};
{% endfor %}
{% endfor %}
