### Community Handling

function ebgp_in_community_cleanup() {
    bgp_large_community.delete([(LOCAL_AS, *, *)]);
}

function ebgp_in_community_cleanup_blackhole() {
    bgp_community.delete([CW_BLACKHOLE]);
}

function ebgp_in_tag_session_transit(int transit_asn) {
    bgp_large_community.add((LOCAL_AS, CI_TYPE, CI_TYPE_VALUE_TRANSIT));
    bgp_large_community.add((LOCAL_AS, CI_TRANSIT_ASN, transit_asn));
    bgp_large_community.add((LOCAL_AS, CI_ASN, transit_asn));
}

function ebgp_in_tag_session_peering(int peering_asn; int peering_type; int ixpid) {
    bgp_large_community.add((LOCAL_AS, CI_TYPE, CI_TYPE_VALUE_PEERING));
    bgp_large_community.add((LOCAL_AS, CI_PEERING_ASN, peering_asn));
    bgp_large_community.add((LOCAL_AS, CI_ASN, peering_asn));

    bgp_large_community.add((LOCAL_AS, CI_PEERING_TYPE, peering_type));

    if peering_type = CI_PEERING_TYPE_VALUE_IXP then {
        bgp_large_community.add((LOCAL_AS, CI_IXP, ixpid));
    }
}

function ebgp_in_tag_session_route_server(int ixpasn; int ixpid) {
    bgp_large_community.add((LOCAL_AS, CI_TYPE, CI_TYPE_VALUE_PEERING));

    bgp_large_community.add((LOCAL_AS, CI_PEERING_TYPE, CI_PEERING_TYPE_VALUE_IXP));
    bgp_large_community.add((LOCAL_AS, CI_IXP, ixpid));
    bgp_large_community.add((LOCAL_AS, CI_IXP_ASN, ixpasn));
    bgp_large_community.add((LOCAL_AS, CI_PEERING_ASN, ixpasn));
}

function ebgp_in_tag_session_customer(int customer_asn) {
    bgp_large_community.add((LOCAL_AS, CI_TYPE, CI_TYPE_VALUE_CUSTOMER));
    bgp_large_community.add((LOCAL_AS, CI_CUSTOMER_ASN, customer_asn));
    bgp_large_community.add((LOCAL_AS, CI_ASN, customer_asn));
}

function ebgp_in_tag_session_id(int session_id) {
    bgp_large_community.add((LOCAL_AS, CI_SESSION_ID, session_id));
}

function ebgp_in_tag_location(int location) {
    bgp_large_community.add((LOCAL_AS, CI_LOCATION, location));
}

function ebgp_in_tag_metro(int metro) {
    bgp_large_community.add((LOCAL_AS, CI_METRO, metro));
}

function ebgp_in_tag_scope(bool is_global) {
    if is_global = false then {
        bgp_large_community.add((LOCAL_AS, CI_SCOPE, CI_SCOPE_VALUE_LOCATION_LOCAL));
    } else {
	bgp_large_community.add((LOCAL_AS, CI_SCOPE, CI_SCOPE_VALUE_GLOBAL));
    }
}

