# reject routes that are not specific enough or not from our own network
function internal_downstream_filter_local_prefixes() {
    if !(net ~ LOCAL_AS_PREFIXES) then {
        print "Reject: prefix that is not in local AS: ", net;
        reject;
    }

    if !(net ~ [0.0.0.0/0{25, 32}, ::/0{56, 64}, ::/0{126, 128}]) then {
        print "Reject: internal prefix with invalid length: ", net;
        reject;
    }

    return 1;
}


filter internal_downstream_out {
    if net ~ [
            ::/0,
            0.0.0.0/0
        ] then {
        accept;
    }
    reject;
}

filter internal_downstream_in {
    # check if prefix is tagged with an appropiate community; otherwise check default filters.
    if !((LOCAL_AS, CA_PROPAGATE, CA_PROPAGATE_VALUE_INTERNAL_UPSTREAMS) ~ bgp_large_community) then {

        # No special community -> check default filters
        internal_downstream_filter_local_prefixes();
    }
    ibgp_in_tag_route_type();
    accept;
}
